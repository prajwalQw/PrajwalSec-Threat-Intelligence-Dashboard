version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: prajwalsec_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: prajwalsec_threat_intelligence
      MYSQL_USER: prajwalsec_user
      MYSQL_PASSWORD: prajwalsec_password
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - threat_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Flask Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: prajwalsec_api
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_USER: prajwalsec_user
      DB_PASSWORD: prajwalsec_password
      DB_NAME: prajwalsec_threat_intelligence
      DB_PORT: 3306
      FLASK_ENV: production
      FLASK_HOST: 0.0.0.0
      FLASK_PORT: 5000
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    networks:
      - threat_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      timeout: 10s
      retries: 5
      start_period: 30s

  # React Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: prajwalsec_frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "3000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - threat_network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: prajwalsec_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - threat_network

volumes:
  db_data:
  redis_data:

networks:
  threat_network:
    driver: bridge